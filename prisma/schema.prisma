// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Posts {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String
  content     String
  views       Int    @default(0)
}

model Project {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  name        String   @db.VarChar(255)
  description String
  content     String
  duration    Int
  // userId  String
  // user    User     @relation(fields: [userId], references: [id])
  updates     Update[]
  Tags        Tag[]
}

model Tag {
  id String @id @default(uuid())

  name      String
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}

enum UPDATE_STATUS {
  NOT_STARTED
  IN_PROGRESS
  SHIPPED
  DEPRECATED
  ARCHIVED
}

model Update {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  title   String
  content String
  status  UPDATE_STATUS @default(NOT_STARTED)
  version String?
  asset   String?

  projectId String
  project   Project @relation(fields: [projectId], references: [id])
  // updatePoints UpdatePoint[]
}

// model UpdatePoint {
//   id        String   @id @default(uuid())
//   createdAt DateTime @default(now())

//   name String @db.VarChar(255)
//   description String

//   updateId String
//   update   Update @relation(fields: [updateId], references: [id])
// }
